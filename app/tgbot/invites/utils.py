import uuid

import base58
from aiogram import types

from app.core.abstractions.services.team_invites import TeamInvitesService
from .constants import SEND_INVITE_PREFIX


async def send_create_invite_message(
        message: types.Message,
        team_id: uuid.UUID,
        team_invites_service: TeamInvitesService,
) -> None:
    invite = await team_invites_service.create_invite(team_id=team_id)
    await message.answer(
        "üéé –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–∏–≥–ª–∞—Å–∏—Ç—å —Å–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π –≤ –∫–æ–º–∞–Ω–¥—É. "
        "–î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ",
        reply_markup=_build_send_invite_kb(invite.id),
    )


def _build_send_invite_kb(invite_id: uuid.UUID):
    base58_invite_id = base58.b58encode(invite_id.bytes).decode("utf-8")
    return types.InlineKeyboardMarkup(inline_keyboard=[[
        types.InlineKeyboardButton(
            text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ",
            switch_inline_query=f"{SEND_INVITE_PREFIX}{base58_invite_id}"
        )
    ]])
